apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.ObjectMeta.Name}}-mysql
  namespace: {{.ObjectMeta.Namespace}}
spec:
  selector:
    matchLabels:
      app: {{.ObjectMeta.Name}}-mysql
  serviceName: {{.ObjectMeta.Name}}-headless
  replicas: {{.Spec.Mysql.MysqlReplicas}}
  template:
    metadata:
      labels:
        app: {{.ObjectMeta.Name}}-mysql
    spec:
      initContainers:
        - name: init-{{.ObjectMeta.Name}}-mysql
          image: {{.Spec.Mysql.MysqlImage}}
          imagePullPolicy: {{.Spec.ImagePullPolicy}}
          command:
          - bash
          - "-c"
          - |
            set -ex
            [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            echo [mysqld] > /mnt/conf.d/server-id.cnf
            echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf
            mv /entrypoint.sh /docker-entrypoint.sh
            if [[ $ordinal -eq 0 ]]; then
              cp /mnt/config-map/primary.cnf /mnt/conf.d/
            else
              cp /mnt/config-map/replica.cnf /mnt/conf.d/
            fi
          volumeMounts:
            - name: {{.ObjectMeta.Name}}-mysql-conf
              mountPath: /mnt/conf.d
            - name: {{.ObjectMeta.Name}}-mysql-configmap
              mountPath: /mnt/config-map
        - name: clone-{{.ObjectMeta.Name}}
          image: {{.Spec.Mysql.Xtrabackupimage}}
          imagePullPolicy: {{.Spec.ImagePullPolicy}}
          command:
            - bash
            - "-c"
            - |
              set -ex
              [[ -d /var/lib/mysql/mysql ]] && exit 0
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              [[ $ordinal -eq 0 ]] && exit 0
              ncat --recv-only ObjectMeta-Pod-Name-$(($ordinal-1)).ObjectMeta-Name-headless 3307 | xbstream -x -C /var/lib/mysql
              xtrabackup --prepare --target-dir=/var/lib/mysql
          volumeMounts:
            - name: {{.ObjectMeta.Name}}-data
              mountPath: /var/lib/mysql
            - name: {{.ObjectMeta.Name}}-mysql-conf
              mountPath: /etc/mysql/conf.d
      containers:
        - name: {{.ObjectMeta.Name}}-mysql
          image: {{.Spec.Mysql.MysqlImage}}
          imagePullPolicy: {{.Spec.ImagePullPolicy}}
          env:
            - name: MYSQL_DATABASE
              value: {{.Spec.Mysql.Mysqldatabase}}
            - name: MYSQL_PASSWORD
              value: {{.Spec.Mysql.MysqlReplicapwd}}
            - name: MYSQL_ROOT_PASSWORD
              value: {{.Spec.Mysql.MysqlRootPassword}}
            - name: MYSQL_USER
              value: {{.Spec.Mysql.MysqlReplicaUser}}
          ports:
            - name: mysql
              containerPort: 3306
          volumeMounts:
            - name: {{.ObjectMeta.Name}}-data
              mountPath: /var/lib/mysql
              subPath: data
            - name: {{.ObjectMeta.Name}}-mysql-conf
              mountPath: /etc/mysql/conf.d
          resources:
            limits:
              cpu: {{.Spec.Mysql.MysqlCpu}}
              memory: {{.Spec.Mysql.MysqlMem}}
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            exec:
              command: ["mysqladmin", "-h", "127.0.0.1", "-u", "root", "-pMysqlRootPassword", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["mysql", "-h", "127.0.0.1", "-u", "root","-pMysqlRootPassword", "-e", "SELECT 1"]
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
        - name: {{.ObjectMeta.Name}}-xtb
          image: {{.Spec.Mysql.Xtrabackupimage}}
          imagePullPolicy: {{.Spec.ImagePullPolicy}}
          ports:
            - name: xtrabackup
              containerPort: 3307
          command:
            - bash
            - "-c"
            - |
              set -ex
              cd /var/lib/mysql
              if [[ -f xtrabackup_slave_info && "x$(<xtrabackup_slave_info)" != "x" ]]; then
                cat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.in
                rm -f xtrabackup_slave_info xtrabackup_binlog_info
              elif [[ -f xtrabackup_binlog_info ]]; then
                [[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1
                rm -f xtrabackup_binlog_info xtrabackup_slave_info
                masterlog=`echo "${BASH_REMATCH[*]}" |awk '{print $1}'`
                masterpos=`echo "${BASH_REMATCH[*]}" |awk '{print $2}'`
                echo "CHANGE MASTER TO MASTER_LOG_FILE='${masterlog}',\
                      MASTER_LOG_POS=${masterpos}" > change_master_to.sql.in
              fi
              
              if [[ -f change_master_to.sql.in ]]; then
                echo "Waiting for mysqld to be ready (accepting connections)"
                until mysql -h 127.0.0.1 -uroot -pMysqlRootPassword -e "SELECT 1"; do sleep 1; done
              
                echo "Initializing replication from clone position"
                 #因采用gtid,MASTER_LOG_FILE与MASTER_LOG_POS不用配置
                 #            mysql -h 127.0.0.1 -uroot -p123456  \
                 #                  -e "$(<change_master_to.sql.in), \
                 #                          MASTER_HOST='k8s-mysql-mysqldb-0.k8s-mysql-mysqldb', \
                 #                          MASTER_USER='root', \
                 #                          MASTER_PASSWORD='123456', \
                 #                          MASTER_CONNECT_RETRY=10,MASTER_AUTO_POSITION=1; \
                 #                        START SLAVE;" || exit 1
                mysql -h 127.0.0.1 -uroot -p{{.Spec.Mysql.MysqlRootPassword}}  \
                      -e "STOP SLAVE;change master to master_auto_position=0;CHANGE MASTER TO  MASTER_HOST='Mysql-Master-headless', \
                              MASTER_USER='root', \
                              MASTER_PASSWORD='MysqlRootPassword', \
                              MASTER_CONNECT_RETRY=10,MASTER_AUTO_POSITION=1; \
                            START SLAVE;" || exit 1
              
                mv change_master_to.sql.in change_master_to.sql.orig
              fi
              
              exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \
                "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root --password='MysqlRootPassword'"
          volumeMounts:
            - name: {{.ObjectMeta.Name}}-data
              mountPath: /var/lib/mysql
              subPath: data
            - name: {{.ObjectMeta.Name}}-mysql-conf
              mountPath: /etc/mysql/conf.d
          resources:
            limits:
              cpu: {{.Spec.Mysql.MysqlCpu}}
              memory: {{.Spec.Mysql.MysqlMem}}
            requests:
              cpu: 100m
              memory: 100Mi
      volumes:
        - name: {{.ObjectMeta.Name}}-mysql-conf
          emptyDir: {}
        - name: {{.ObjectMeta.Name}}-mysql-configmap
          configMap:
            name: {{.ObjectMeta.Name}}-mysql-configmap
  volumeClaimTemplates:
    - metadata:
        name: {{.ObjectMeta.Name}}-data
        namespace: {{.ObjectMeta.Namespace}}
        annotations:
          volume.beta.kubernetes.io/storage-class: {{.Spec.Mysql.Mysqlstoragename}}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{.Spec.Mysql.Mysqlstoragemax}}